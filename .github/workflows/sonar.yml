name: Sonar
on:
  workflow_dispatch:
  push:
    branches:
      - main # the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Run SonarQube in Docker
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube
          sleep 30 # Дайте йому трохи часу для запуску

      - name: Wait for SonarQube to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; then
              echo "SonarQube is up!"
              exit 0
            fi
            echo "Waiting for SonarQube..."
            sleep 15
          done
          echo "SonarQube did not start in time!"
          exit 1

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_TOKEN: squ_8e2fcd1156f70a5ddcc931c5d0f40cc6dcc9b840
          SONAR_HOST_URL: http://localhost:9000 # Використовуємо локальний адрес для контейнера
        run:  mvn -B verify sonar:sonar -Dmaven.test.failure.ignore=true -Dsonar.login=${{ secrets.SONAR_TOKEN }} -e # Додаємо -Dsonar.login
